// Ordena listas à partir do algoritmo Bubble Sort o primeiro laço itera até que toda a lista esteja ordenada,
// o segundo laço compara os elementos 2 a 2 verificando quem e maior ou menor, ordenando em seguida
// A variável troca verifica se houve alguma troca na primeira iteração e caso não haja, interrompe o laço

package dominio;

public class bubbleSort {
	public static void bubbleSortCrescente(int lista[]) {
		int tmp, troca;
		troca = 0;
		
		for (int i = 0; i < lista.length; i++) {
			for (int j = 0; j < lista.length - 1; j ++) {
				if (lista[j] > lista[j+1]) {
					tmp = lista[j];
					lista[j] = lista[j+1];
					lista[j+1] = tmp;
					troca = 1;
				}//if				
			}//for j
			
			if (troca == 0) {
				break;
			}//if			
		}// for i		
	}//bubbleSortCrescente

	public static void bubbleSortDeCrescente(int lista[]) {
		int tmp, troca;
		troca = 0;
		
		for (int i = 0; i < lista.length; i++) {
			for (int j = 0; j < lista.length - 1; j ++) {
				if (lista[j] < lista[j+1]) {
					tmp = lista[j];
					lista[j] = lista[j+1];
					lista[j+1] = tmp;
					troca = 1;
				}//if				
			}//for j
			
			if (troca == 0) {
				break;
			}//if			
		}// for i		
	}//bubbleSortCrescente
}//public class
